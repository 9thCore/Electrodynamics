buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.6.1'
    }
}


import org.ajoberstar.gradle.git.tasks.GitTag
import org.ajoberstar.gradle.git.tasks.GitPush

plugins {
    id "com.matthewprenger.cursegradle" version '1.4.0'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

libsDirName = "../output"
distsDirName = "../output"

def	version_minor="5"
def	version_revision='8'
def	minecraft_version='1.18.1'
def	version_build='1'
def	version_major='0'

version = minecraft_version+'-'+version_major+'.'+version_minor+'.'+version_revision+'-'+version_build
group = 'electrodynamics' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'Electrodynamics'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)



println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.18.1' 
    
    runs {
        client {
            workingDirectory project.file('run')

            arg "-mixin.config=electrodynamics.mixins.json"

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

			property 'mixin.debug.export', 'true'

            mods {
                electrodynamics {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            arg "-mixin.config=electrodynamics.mixins.json"

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
			
			property 'mixin.debug.export', 'true'
            
            mods {
                electrodynamics {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            arg "-mixin.config=electrodynamics.mixins.json"

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'electrodynamics', '--all', '--output', file('src/generated/resources/')

            mods {
                electrodynamics {
                    source sourceSets.main
                }
            }
        }
    }
}
mixin {
    add sourceSets.main, "electrodynamics.refmap.json"
}
dependencies {
    minecraft 'net.minecraftforge:forge:1.18.1-39.0.0'
	compileOnly fg.deobf("mezz.jei:jei-1.18.1:9.1.0.41:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.1:9.1.0.41")
    
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}


// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "electrodynamics",
            "Specification-Vendor": "aurilisdev",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"aurilisdev",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "electrodynamics.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar') 

task sourcesJar(type: Jar, dependsOn: classes) {
	from sourceSets.main.allSource
	classifier = 'sources'
}
task deobfJar(type: Jar) {
	from sourceSets.main.output
	classifier = 'deobf'
}

artifacts {
	archives sourcesJar
	archives deobfJar
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

/*
This needs to stay. It's the Maven repository for JEI along with a fallback!
*/
repositories{
		mavenCentral()
	  	maven {
	   	    name = "Progwml6 maven"
	   	    url = "https://dvs1.progwml6.com/files/maven/"
	  	}
	    maven {
	       name = "ModMaven"
	       url = "https://modmaven.k-4u.nl"
	    }
}

ext.gittagnew = 'v'+project.version

task createTag(type: GitTag) {
   repoPath = rootDir
   tagName = gittagnew
   message = "tag ${project.version.toString()}"
}

task pushTag(type: GitPush, dependsOn: createTag) {
   namesOrSpecs = [gittagnew]
}
tasks.curseforge.dependsOn jar
tasks.curseforge.dependsOn pushTag

curseforge {
  apiKey = System.getenv("CURSEFORGE_KEY")
  project {
    id = '316867'
    changelog = 'You can find changelog at: https://aurilis.dev/'
    releaseType = 'release'
    addGameVersion minecraft_version

    mainArtifact(jar) {
      displayName=project.name+' ' + project.version
    }
  }
}