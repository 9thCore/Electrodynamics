public VoxelShape makeShape(){
	VoxelShape shape = VoxelShapes.empty();
	shape = VoxelShapes.join(shape, VoxelShapes.box(0, 0, 0, 1, 0.0625, 1), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0, 0.0625, 0, 0.1875, 1, 0.125), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0, 0.0625, 0.875, 0.1875, 1, 1), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0, 0.875, 0.125, 0.1875, 1, 0.875), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.0625, 0.125, 0.125, 0.125, 0.875, 0.875), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0, 0.25, 0.25, 0.0625, 0.75, 0.75), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.125, 0.25, 0.25, 0.1875, 0.75, 0.75), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0, 0.0625, 0.125, 0.1875, 0.125, 0.875), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.5625, 0.0625, 0.03125, 0.8125, 0.625, 0.125), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.5625, 0.0625, 0.875, 0.8125, 0.625, 0.96875), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.1875, 0.4375, 0, 0.5625, 0.5625, 0.125), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.1875, 0.4375, 0.875, 0.5625, 0.5625, 1), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.1875, 0.875, 0.4375, 0.4375, 1, 0.5625), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.5, 0.0625, 0.75, 0.875, 0.125, 0.875), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.5, 0.0625, 0.125, 0.875, 0.125, 0.25), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.5, 0.125, 0.71875, 0.875, 0.1875, 0.78125), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.5, 0.125, 0.21875, 0.875, 0.1875, 0.28125), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.4375, 0.125, 0.3125, 0.9375, 0.875, 0.6875), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.4375, 0.3125, 0.125, 0.9375, 0.6875, 0.875), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.4375, 0.6875, 0.6875, 0.9375, 0.75, 0.8125), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.4375, 0.75, 0.6875, 0.9375, 0.8125, 0.75), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.4375, 0.1875, 0.6875, 0.9375, 0.25, 0.75), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.4375, 0.25, 0.6875, 0.9375, 0.3125, 0.8125), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.4375, 0.75, 0.25, 0.9375, 0.8125, 0.3125), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.4375, 0.6875, 0.1875, 0.9375, 0.75, 0.3125), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.4375, 0.25, 0.1875, 0.9375, 0.3125, 0.3125), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.4375, 0.1875, 0.25, 0.9375, 0.25, 0.3125), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.9375, 0.25, 0.25, 1, 0.75, 0.75), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.375, 0.3125, 0.25, 0.4375, 0.6875, 0.75), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.375, 0.25, 0.3125, 0.4375, 0.3125, 0.6875), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.375, 0.6875, 0.3125, 0.4375, 0.75, 0.6875), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.75, 0.703125, 0.125, 0.875, 0.765625, 0.375), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.5, 0.703125, 0.125, 0.625, 0.765625, 0.375), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.5, 0.703125, 0.609375, 0.625, 0.765625, 0.859375), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.75, 0.703125, 0.609375, 0.875, 0.765625, 0.859375), IBooleanFunction.OR);
	shape = VoxelShapes.join(shape, VoxelShapes.box(0.4375, 0.875, 0.375, 0.8125, 0.953125, 0.625), IBooleanFunction.OR);

	return shape;
}